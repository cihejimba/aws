AWSTemplateFormatVersion: '2010-09-09'
Description: A stack that creates an elasticache redis and places it into two subnets
Parameters:
  NetworkStackName:
    Type: String
    Description: The name of the networking stack that this stack will build upon.
  CacheInstanceClass:
    Type: String
    Description: The ID of the second subnet to place the redis into.
    Default: 'cache.t2.micro'
    
Resources:

  CacheSubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: Cache Subnet Group
      SubnetIds:
        - Fn::ImportValue:
            !Join [':', [!Ref 'NetworkStackName', 'PrivateSubnetOne']]
        - Fn::ImportValue:
            !Join [':', [!Ref 'NetworkStackName', 'PrivateSubnetTwo']]

  RedisCluster:
    Type: AWS::ElastiCache::CacheCluster
    Properties:    
      Engine: memcached
      CacheNodeType: cache.t2.micro
      NumCacheNodes: '1'
      VpcSecurityGroupIds:
        - Fn::ImportValue:
            !Join [':', [!Ref 'NetworkStackName', 'ElasticacheSecurityGroupId']]

            
            
Outputs:
  EndpointAddress:
    Description: Address of the Redis endpoint.
    Value: !GetAtt 'RedisCluster.RedisEndpoint.Address'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'EndpointAddress' ] ]
  EndpointPort:
    Description: Port of the Redis endpoint.
    Value: !GetAtt 'RedisCluster.RedisEndpoint.Port'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'EndpointPort' ] ]
