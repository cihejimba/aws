AWSTemplateFormatVersion: '2010-09-09'
Description: A stack that creates an elasticache redis and places it into two subnets
Parameters:
  NetworkStackName:
    Type: String
    Description: The name of the networking stack that this stack will build upon.
  CacheSubnetGroupName:
    Type: String
    Description: The name of the elasticache subnet group name
    Default: 'ElasticacheSubnetGroupName'
  MultiAZSupport:
    Description: >-
      Indicates whether Multi-AZ is enabled. When Multi-AZ is enabled, a
      read-only replica is automatically promoted to a read-write primary
      cluster if the existing primary cluster fails. If you specify true, you must specify a value greater than 1 for the NumCacheClusters property.
    Type: String
    Default: 'true'
    AllowedValues:
      - 'true'
      - 'false'
  NumCacheClusters:
    Description: >-
      The number of cache clusters for this replication group. If MultiAZ
      support is enabled, you must specify a value greater than 1.
    Default: '2'
    Type: Number
    MinValue: '1'
    MaxValue: '6'
  CacheNodeType:
    Description: The instance type the nodes will launch under.
    Type: String
    Default: cache.t3.medium
  ReplicationGroupDescription:
    Description: The description of the replication group.
    Type: String
    Default: Redis replication group
  SnapshotRetentionLimit:
    Description: >-
      The number of days that ElastiCache retains automatic snapshots before
      deleting them.
    Type: Number
    Default: '7'
  SnapshotWindow:
    Description: >-
      The time range (in UTC) when ElastiCache takes a daily snapshot of your node group.
    Type: String
    Default: '05:00-09:00'
    AllowedPattern: '\d{2}:\d{2}-\d{2}:\d{2}'
    ConstraintDescription: 'must be a valid timestamp range, for example 05:00-09:00'
  PreferredMaintenanceWindow:
    Description: >-
      The weekly time range during which system maintenance can occur. Use the following format to specify a time range: ddd:hh24:mi-ddd:hh24:mi (24H Clock UTC).
    Type: String
    Default: 'sun:22:00-sun:23:30'
    AllowedPattern: >-
      (mon|tue|wed|thu|fri|sat|sun):\d{2}:\d{2}-(mon|tue|wed|thu|fri|sat|sun):\d{2}:\d{2}
    ConstraintDescription: >-
      must be a valid timestamp range with day of week, for example
      sun:22:00-sun:23:30

      
Resources:

  CacheSubnetGroup:
    Type: AWS::ElastiCache::SubnetGroup
    Properties:
      Description: Cache Subnet Group
      CacheSubnetGroupName: !Ref CacheSubnetGroupName
      SubnetIds:
        - Fn::ImportValue:
            !Join [':', [!Ref 'NetworkStackName', 'PrivateSubnetOne']]
        - Fn::ImportValue:
            !Join [':', [!Ref 'NetworkStackName', 'PrivateSubnetTwo']]

  ReplicationGroup:
    Type: 'AWS::ElastiCache::ReplicationGroup'
    DependsOn: CacheSubnetGroup
    Properties:
      #AutomaticFailoverEnabled: !Ref MultiAZSupport
      MultiAZEnabled: !Ref MultiAZSupport
      CacheNodeType: !Ref CacheNodeType
      CacheSubnetGroupName: !Ref CacheSubnetGroupName
      Engine: redis
      NumCacheClusters: !Ref NumCacheClusters
      Port: 6379
      PreferredMaintenanceWindow: !Ref PreferredMaintenanceWindow
      ReplicationGroupDescription: !Ref ReplicationGroupDescription
      SecurityGroupIds:
        - Fn::ImportValue:
            !Join [':', [!Ref 'NetworkStackName', 'ElasticacheSecurityGroupId']]
      SnapshotRetentionLimit: !Ref SnapshotRetentionLimit
      SnapshotWindow: !Ref SnapshotWindow
      
#  RedisCluster:
#    Type: AWS::ElastiCache::CacheCluster
#    Properties:
#      CacheSubnetGroupName: !Ref CacheSubnetGroupName
#      Engine: redis
#      CacheNodeType: !Ref CacheInstanceClass
#      NumCacheNodes: '1'
#      VpcSecurityGroupIds:
#        - Fn::ImportValue:
#            !Join [':', [!Ref 'NetworkStackName', 'ElasticacheSecurityGroupId']]

            
            
Outputs:
  EndpointAddress:
    Description: Address of the Redis endpoint.
    Value: !GetAtt 'ReplicationGroup.PrimaryEndPoint.Address'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'EndpointAddress' ] ]
  EndpointPort:
    Description: Port of the Redis endpoint.
    Value: !GetAtt 'ReplicationGroup.PrimaryEndPoint.Port'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'EndpointPort' ] ]
